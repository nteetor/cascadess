// Utilities

// stylelint-disable-next-line scss/dollar-variable-default
$utilities: (
  "align": (
    property: vertical-align,
    class: align,
    values: baseline top middle bottom text-bottom text-top,
  ),

  "float": (
    responsive: true,
    property: float,
    values: left right none
  ),

  "overflow": (
    property: overflow,
    values: auto hidden visible scroll,
  ),

  "display": (
    responsive: true,
    print: true,
    property: display,
    class: d,
    values: inline inline-block block grid table table-row table-cell flex inline-flex none
  ),

  "shadow": (
    property: box-shadow,
    class: shadow,
    values: (
      sm: $box-shadow-sm,
      md: $box-shadow,
      lg: $box-shadow-lg,
      none: none,
    )
  ),

  "position": (
    property: position,
    values: static relative absolute fixed sticky
  ),

  "top": (
    property: top,
    class: position-t,
    values: $position-values
  ),

  "bottom": (
    property: bottom,
    class: position-b,
    values: $position-values
  ),

  "left": (
    property: left,
    class: position-l,
    values: $position-values
  ),

  "right": (
    property: right,
    class: position-r,
    values: $position-values
  ),

  "translate-middle": (
    property: transform,
    class: position-by-center,
    values: (
      null: (translateX(-50%) translateY(-50%))
    )
  ),

  "border": (
    property: border,
    values: (
      null: $border-width solid $border-color,
      0: 0,
    )
  ),

  "border-top": (
    property: border-top,
    values: (
      null: $border-width solid $border-color,
      0: 0,
    )
  ),

  "border-right": (
    property: border-right,
    values: (
      null: $border-width solid $border-color,
      0: 0,
    )
  ),

  "border-bottom": (
    property: border-bottom,
    values: (
      null: $border-width solid $border-color,
      0: 0,
    )
  ),

  "border-left": (
    property: border-left,
    values: (
      null: $border-width solid $border-color,
      0: 0,
    )
  ),

  "border-color": (
    property: border-color,
    class: border,
    values: map-merge($theme-colors, ("white": $white))
  ),

  "border-width": (
    property: border-width,
    class: border,
    values: $border-widths
  ),

  // Sizing utilities
  "width": (
    property: width,
    class: w,
    values: (
      25: 25%,
      50: 50%,
      75: 75%,
      100: 100%,
      auto: auto
    )
  ),

  "max-width": (
    property: max-width,
    class: mw,
    values: (100: 100%)
  ),

  "viewport-width": (
    property: width,
    class: vw,
    values: (100: 100vw)
  ),

  "min-viewport-width": (
    property: min-width,
    class: min-vw,
    values: (100: 100vw)
  ),

  "height": (
    property: height,
    class: h,
    values: (
      25: 25%,
      50: 50%,
      75: 75%,
      100: 100%,
      auto: auto
    )
  ),

  "max-height": (
    property: max-height,
    class: mh,
    values: (100: 100%)
  ),

  "viewport-height": (
    property: height,
    class: vh,
    values: (100: 100vh)
  ),

  "min-viewport-height": (
    property: min-height,
    class: min-vh,
    values: (100: 100vh)
  ),

  // Flex utilities
  "flex": (
    responsive: true,
    property: flex,
    values: (fill: 1 1 auto)
  ),

  "flex-direction": (
    responsive: true,
    property: flex-direction,
    class: flex,
    values: row column row-reverse column-reverse
  ),

  "flex-grow": (
    responsive: true,
    property: flex-grow,
    class: flex,
    values: (
      grow-0: 0,
      grow-1: 1,
    )
  ),

  "flex-shrink": (
    responsive: true,
    property: flex-shrink,
    class: flex,
    values: (
      shrink-0: 0,
      shrink-1: 1,
    )
  ),

  "flex-wrap": (
    responsive: true,
    property: flex-wrap,
    class: flex,
    values: wrap nowrap wrap-reverse
  ),

  "gap": (
    responsive: true,
    property: gap,
    class: gap,
    values: $spacers
  ),

  "justify-content": (
    responsive: true,
    property: justify-content,
    class: flex-justify,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      between: space-between,
      around: space-around,
      evenly: space-evenly,
    )
  ),

  "align-items": (
    responsive: true,
    property: align-items,
    class: flex-items,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      baseline: baseline,
      stretch: stretch,
    )
  ),

  "align-content": (
    responsive: true,
    property: align-content,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      between: space-between,
      around: space-around,
      stretch: stretch,
    )
  ),

  "align-self": (
    responsive: true,
    property: align-self,
    class: item-align,
    values: (
      auto: auto,
      start: flex-start,
      end: flex-end,
      center: center,
      baseline: baseline,
      stretch: stretch,
    )
  ),

  "order": (
    responsive: true,
    property: order,
    class: item-order,
    values: (
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
    ),
  ),

  // Margin utilities
  "margin": (
    responsive: true,
    property: margin,
    class: m,
    values: map-merge($spacers, (auto: auto))
  ),

  "margin-x": (
    responsive: true,
    property: margin-right margin-left,
    class: m-h,
    values: map-merge($spacers, (auto: auto))
  ),

  "margin-y": (
    responsive: true,
    property: margin-top margin-bottom,
    class: m-v,
    values: map-merge($spacers, (auto: auto))
  ),

  "margin-top": (
    responsive: true,
    property: margin-top,
    class: m-t,
    values: map-merge($spacers, (auto: auto))
  ),

  "margin-right": (
    responsive: true,
    property: margin-right,
    class: m-r,
    values: map-merge($spacers, (auto: auto))
  ),

  "margin-bottom": (
    responsive: true,
    property: margin-bottom,
    class: m-b,
    values: map-merge($spacers, (auto: auto))
  ),

  "margin-left": (
    responsive: true,
    property: margin-left,
    class: m-l,
    values: map-merge($spacers, (auto: auto))
  ),

  // Negative margin utilities
  "negative-margin": (
    responsive: true,
    property: margin,
    class: m,
    values: $negative-spacers
  ),

  "negative-margin-top": (
    responsive: true,
    property: margin-top,
    class: m-t,
    values: $negative-spacers
  ),

  "negative-margin-right": (
    responsive: true,
    property: margin-right,
    class: m-r,
    values: $negative-spacers
  ),

  "negative-margin-bottom": (
    responsive: true,
    property: margin-bottom,
    class: m-b,
    values: $negative-spacers
  ),

  "negative-margin-left": (
    responsive: true,
    property: margin-left,
    class: m-l,
    values: $negative-spacers
  ),

  // Padding utilities
  "padding": (
    responsive: true,
    property: padding,
    class: p,
    values: $spacers
  ),

  "padding-top": (
    responsive: true,
    property: padding-top,
    class: p-t,
    values: $spacers
  ),

  "padding-right": (
    responsive: true,
    property: padding-right,
    class: p-r,
    values: $spacers
  ),

  "padding-bottom": (
    responsive: true,
    property: padding-bottom,
    class: p-b,
    values: $spacers
  ),

  "padding-left": (
    responsive: true,
    property: padding-left,
    class: p-l,
    values: $spacers
  ),

  // Text
  "font-size": (
    rfs: true,
    property: font-size,
    class: font,
    values: $font-sizes
  ),

  "font-style": (
    property: font-style,
    class: font,
    values: italic normal
  ),

  "font-weight": (
    property: font-weight,
    class: font,
    values: (
      light: $font-weight-light,
      lighter: $font-weight-lighter,
      normal: $font-weight-normal,
      bold: $font-weight-bold,
      bolder: $font-weight-bolder
    )
  ),

  "text-transform": (
    property: text-transform,
    class: text,
    values: lowercase uppercase capitalize
  ),

  "text-align": (
    responsive: true,
    property: text-align,
    class: text,
    values: left right center
  ),

  "color": (
    property: color,
    class: text,
    values: map-merge(
      $theme-colors,
      (
        "white": $white,
        "body": $body-color,
        "muted": $text-muted,
        "black-50": rgba($black, .5),

        "white-50": rgba($white, .5),

        "reset": inherit,
      )
    )
  ),

  "line-height": (
    property: line-height,
    class: text-height,
    values: (
      sm: $line-height-sm,
      md: $line-height-base,
      lg: $line-height-lg,
    )
  ),

  "background-color": (
    property: background-color,
    class: bg,
    values: map-merge(
      $theme-colors,
      (
        "body": $body-bg,
        "white": $white,
        "transparent": transparent
      )
    )
  ),

  "white-space": (
    property: white-space,
    class: text,
    values: (
      wrap: normal,
      nowrap: nowrap,
    )
  ),

  "text-decoration": (
    property: text-decoration,
    values: none underline line-through
  ),

  "word-wrap": (
    property: word-wrap word-break,
    class: text,
    values: (
      break: break-word
    )
  ),

  "font-family": (
    property: font-family,
    class: font,
    values: (monospace: var(--#{$variable-prefix}font-monospace))
  ),

  "user-select": (
    property: user-select,
    class: text-select,
    values: all none
  ),

  "pointer-events": (
    property: pointer-events,
    class: pe,
    values: none auto,
  ),

  "rounded": (
    property: border-radius,
    class: border-round,
    values: (
      none: 0,
      sm: $border-radius-sm,
      md: $border-radius,
      lg: $border-radius-lg,
    )
  ),

  "visibility": (
    property: visibility,
    class: null,
    values: (
      visible: visible,
      invisible: hidden,
    )
  )
);
