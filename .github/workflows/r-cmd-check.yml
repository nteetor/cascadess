name: r-cmd-check

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  r-cmd-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '3.6'}
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: '3.6'}
          - {os: macOS-latest, r: 'release' }
          - {os: macOS-latest, r: 'devel'}
          - {os: ubuntu-16.04, r: '3.3', rspm: "https://packagemanager.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.4', rspm: "https://packagemanager.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.5', rspm: "https://packagemanager.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: 'oldrel', rspm: "https://packagemanager.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: 'release', rspm: "https://packagemanager.rstudiobpm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: 'devel', rspm: "https://packagemanager.rstudiopm.com/all/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages("remotes")
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('.github/depends.rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "16.04"), sep = "\n")')

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_FORCE_SUGGESTS_: false
        run: rcmdcheck::rcmdcheck(args = "--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show {testthat} output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
